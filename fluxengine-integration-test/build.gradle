plugins {
    id 'java-library'
}

group 'jp.co.fluxengine'
version '1.0.10'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

sourceSets {
    main.resources {
        srcDirs file('conf')
    }
}

tasks.withType(AbstractCompile)*.options*.encoding = 'UTF-8'

dependencies {
    // local-test-runner, remote-test-runner, event-publisherは競合する
    // このため、プラグインやローカルテストのために使うlocal-test-runnerのみ依存関係に含め、
    // Dataflowのテストのみで使用する残り2つは別のクラスローダーでロードすることで解決する
    implementation fileTree(dir: 'lib', include: 'fluxengine-local-test-runner-*.jar')
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '3.3.0'
    implementation group: 'com.google.cloud.sql', name: 'mysql-socket-factory-connector-j-8', version: '1.0.14'
    implementation group: 'com.google.cloud.sql', name: 'jdbc-socket-factory-core', version: '1.0.14'
    implementation('mysql:mysql-connector-java:8.0.16') {
        exclude group: 'com.google.protobuf', module: 'protobuf-java'
    }
    implementation group: 'redis.clients', name: 'jedis', version: '3.0.1'

    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.11.2'
    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.2'
    testImplementation group: 'commons-io', name: 'commons-io', version: '2.6'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.4.2'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.4.2'
    testImplementation 'org.assertj:assertj-core:3.12.2'
    testImplementation group: 'org.assertj', name: 'assertj-db', version: '1.2.0'
    testImplementation 'com.squareup.okhttp3:okhttp:3.14.2'
}

test {
    useJUnitPlatform()
    // Each test using Dataflow waits for process to complete for a long time
    // So make them dependent and execute them in parallel
    systemProperties['junit.jupiter.execution.parallel.mode.default'] = 'concurrent'
    systemProperties['junit.jupiter.execution.parallel.enabled'] = true
    maxParallelForks = 8
    // Not to exceed the limit of CircleCI (4GB)
    maxHeapSize = "3g"
    environment 'CONF', file('conf').absolutePath
    jvmArgs = ["-Dlog4j.configuration=\"${file('conf/log4j2.xml').toURI().toString()}\"", "-Dfile.encoding=UTF-8"]
    testLogging {
        events 'standard_out', 'standard_error'
    }
}

task copyDependencies {
    doLast {
        copy {
            // 最初からlibにあるfluxengine-local-test-runnerをコピーすると0byteになってしまうので、
            // コピー対象から外す
            from configurations.compileClasspath
            into 'lib'
            exclude 'fluxengine-*', 'guava-*android*'
        }
    }
}
